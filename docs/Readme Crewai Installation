# Docker Installation (without docker)
Get started with CrewAI - Install, configure, and build your first AI crew

Python Version Requirements

CrewAI requires Python >=3.10 and <3.13. Hereâ€™s how to check your version:


python3 --version
If you need to update Python, visit python.org/downloads

â€‹
Installing CrewAI
CrewAI is a flexible and powerful AI framework that enables you to create and manage AI agents, tools, and tasks efficiently. Letâ€™s get you set up! ðŸš€

1
Install CrewAI

Install CrewAI with all recommended tools using either method:

Terminal

pip install 'crewai[tools]'
or

Terminal

pip install crewai crewai-tools
Both methods install the core package and additional tools needed for most use cases.

2
Upgrade CrewAI (Existing Installations Only)

If you have an older version of CrewAI installed, you can upgrade it:

Terminal

pip install --upgrade crewai crewai-tools
If you see a Poetry-related warning, youâ€™ll need to migrate to our new dependency manager:

Terminal

crewai update
This will update your project to use UV, our new faster dependency manager.

Skip this step if youâ€™re doing a fresh installation.

3
Verify Installation

Check your installed versions:

Terminal

pip freeze | grep crewai
You should see something like:

Output

crewai==X.X.X
crewai-tools==X.X.X
Installation successful! Youâ€™re ready to create your first crew.
â€‹
Creating a New Project
We recommend using the YAML Template scaffolding for a structured approach to defining agents and tasks.

1
Generate Project Structure

Run the CrewAI CLI command:

Terminal

crewai create crew <project_name>
This creates a new project with the following structure:


my_project/
â”œâ”€â”€ .gitignore
â”œâ”€â”€ pyproject.toml
â”œâ”€â”€ README.md
â”œâ”€â”€ .env
â””â”€â”€ src/
    â””â”€â”€ my_project/
        â”œâ”€â”€ __init__.py
        â”œâ”€â”€ main.py
        â”œâ”€â”€ crew.py
        â”œâ”€â”€ tools/
        â”‚   â”œâ”€â”€ custom_tool.py
        â”‚   â””â”€â”€ __init__.py
        â””â”€â”€ config/
            â”œâ”€â”€ agents.yaml
            â””â”€â”€ tasks.yaml
2
Customize Your Project

Your project will contain these essential files:

File	Purpose
agents.yaml	Define your AI agents and their roles
tasks.yaml	Set up agent tasks and workflows
.env	Store API keys and environment variables
main.py	Project entry point and execution flow
crew.py	Crew orchestration and coordination
tools/	Directory for custom agent tools
Start by editing agents.yaml and tasks.yaml to define your crewâ€™s behavior. Keep sensitive information like API keys in .env.


# Crewai docker integration guide
Last updated on 01/24/25
Learn how to integrate CrewAI with Docker for seamless deployment and management of AI models.


Prerequisites
Ensure you have Docker installed on your system. You can download and install Docker from the official Docker website.

Step 1: Pull the CrewAI Docker Image
First, pull the official CrewAI Docker image from Docker Hub:

docker pull crewai/crewai:latest
Step 2: Run the Docker Container
Run the Docker container with the following command:

docker run -it --name crewai_container crewai/crewai:latest
This command will start a new container named crewai_container using the latest CrewAI image.

Step 3: Access the Container
To access the running container, use the following command:

docker exec -it crewai_container /bin/bash
You are now inside the container and can start using CrewAI.

Step 4: Verify Installation
Verify that CrewAI is installed correctly by running:

crewai --version
You should see the version number of CrewAI, confirming that the installation was successful.